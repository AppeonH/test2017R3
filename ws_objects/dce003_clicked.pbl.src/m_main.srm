$PBExportHeader$m_main.srm
forward
global type m_main from menu
end type
type m_testcontents from menu within m_main
end type
type m_datawindowbuttonclickingevent from menu within m_testcontents
end type
type m_datawindowclickedeventothers from menu within m_testcontents
end type
type m_testcontents from menu within m_main
m_datawindowbuttonclickingevent m_datawindowbuttonclickingevent
m_datawindowclickedeventothers m_datawindowclickedeventothers
end type
type m_1 from menu within m_main
end type
global type m_main from menu
m_testcontents m_testcontents
m_1 m_1
end type
end forward

global type m_main from menu
m_testcontents m_testcontents
m_1 m_1
end type
global m_main m_main

on m_main.create
m_main=this
call super::create
this.text = "m_main"
this.m_testcontents=create m_testcontents
this.m_1=create m_1
this.Item[UpperBound(this.Item)+1]=this.m_testcontents
this.Item[UpperBound(this.Item)+1]=this.m_1
end on

on m_main.destroy
call super::destroy
destroy(this.m_testcontents)
destroy(this.m_1)
end on

type m_testcontents from menu within m_main
m_datawindowbuttonclickingevent m_datawindowbuttonclickingevent
m_datawindowclickedeventothers m_datawindowclickedeventothers
end type

on m_testcontents.create
call super::create
this.text = "Test Contents"
this.m_datawindowbuttonclickingevent=create m_datawindowbuttonclickingevent
this.m_datawindowclickedeventothers=create m_datawindowclickedeventothers
this.Item[UpperBound(this.Item)+1]=this.m_datawindowbuttonclickingevent
this.Item[UpperBound(this.Item)+1]=this.m_datawindowclickedeventothers
end on

on m_testcontents.destroy
call super::destroy
destroy(this.m_datawindowbuttonclickingevent)
destroy(this.m_datawindowclickedeventothers)
end on

type m_datawindowbuttonclickingevent from menu within m_testcontents
end type

on m_datawindowbuttonclickingevent.create
call super::create
this.text = "DataWindow Clicked Event - Column"
end on

on m_datawindowbuttonclickingevent.destroy
call super::destroy
end on

event clicked;opensheet(W_DCE003W01_ClickedColumn, parentwindow, 1, Original!)
end event

type m_datawindowclickedeventothers from menu within m_testcontents
end type

event clicked;opensheet(w_dce003w02_clickedother, parentwindow, 1, Original!)
end event

on m_datawindowclickedeventothers.create
call super::create
this.text = "DataWindow Clicked Event - Others"
end on

on m_datawindowclickedeventothers.destroy
call super::destroy
end on

type m_1 from menu within m_main
end type

event clicked;Close(ParentWindow)
end event

on m_1.create
call super::create
this.text = "Exit"
end on

on m_1.destroy
call super::destroy
end on

